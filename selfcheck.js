// console.log(" Результаты самопроверки part 1: \n верстка страницы валидная +4 \n логотип в хедере состоит из текстовых элементов +1 \n страница содержит ровно один элемент <h1> +1 \n добавлен favicon +1 \n Вёрстка соответствует макету +35 \n блок <header> +5 \n блок Not only +5 \n блок About +5 \n блок Our Friends +5 \n блок Help +5 \n блок In addition +5 \n блок <footer> +5 \n Требования к css +6 \n для позиционирования элементов блока Help использована сеточная верстка (flexbox или grid) +2 \n при уменьшении масштаба страницы браузера или увеличении ширины страницы (>1280px) вёрстка размещается по центру, а не сдвигается в сторону и не растягивается по всей ширине +2 \n фоновый цвет тянется на всю ширину страницы +2 \n Интерактивность элементов +12 \n элемент About the Shelter в навигации подсвечен и неинтерактивен, остальные элементы навигации интерактивны +2 \n каждая карточка с питомцем в блоке Our Friends интерактивна при наведении на любую область этой карточки +2 \n плавная прокрутка по якорям +2 \n выполняются все ссылочные связи согласно Перечню ссылочных связей для страницы Main +2 \n выполнена интерактивность ссылок и кнопок. +2 \n обязательное требование к интерактивности: плавное изменение внешнего вида элемента при наведении и клике, не влияющее на соседние элементы +2 \n ");

// console.log(" Результаты самопроверки part 2: \n Вёрстка страницы Main соответствует макету при ширине экрана 1280px: +14 \n блок <header>: +2 \n блок Not only: +2 \n блок About: +2 \n блок Our Friends: +2 \n блок Help: +2 \n блок In addition: +2 \n блок <footer>: +2 \n Вёрстка страницы Main соответствует макету при ширине экрана 768px: +14 \n блок <header>: +2 \n блок Not only: +2 \n блок About: +2 \n блок Our Friends: +2 \n блок Help: +2 \n блок In addition: +2 \n блок <footer>: +2 \n Вёрстка страницы Main соответствует макету при ширине экрана 320px: +14 \n блок <header>: +2 \n блок Not only: +2 \n блок About: +2 \n блок Our Friends: +2 \n блок Help: +2 \n блок In addition: +2 \n блок <footer>: +2 \n Вёрстка страницы Pets соответствует макету при ширине экрана 1280px: +6 \n блок <header>: +2 \n блок Our Friends: +2 \n блок <footer>: +2 \n Вёрстка страницы Pets соответствует макету при ширине экрана 768px: +6 \n блок <header>: +2 \n блок Our Friends: +2 \n блок <footer>: +2 \n Вёрстка страницы Pets соответствует макету при ширине экрана 320px: +6 \n блок <header>: +2 \n блок Our Friends: +2 \n блок <footer>: +2 \n нет полосы прокрутки при ширине страницы Main от 1280рх до 768рх: +5 \n нет полосы прокрутки при ширине страницы Main от 768рх до 320рх: +5 \n нет полосы прокрутки при ширине страницы Pets от 1280рх до 768рх: +5 \n нет полосы прокрутки при ширине страницы Pets от 768рх до 320рх: +5 \n резиновая верстка на странице Main: +4 \n резиновая верстка на странице Pets: +4 \n появляется иконка бургер-меню: +4 \n верстка обеих страниц валидная: +8")

console.log('1. Реализация burger menu на обеих страницах: +26')
console.log('[x]    при ширине страницы меньше 768рх панель навигации скрывается, появляется бургер-иконка: +2')
console.log('[x]    при нажатии на бургер-иконку, справа плавно появляется адаптивное меню шириной 320px, бургер-иконка плавно поворачивается на 90 градусов: +4')
console.log('[x]    высота адаптивного меню занимает всю высоту экрана: +2')
console.log('[x]    при повторном нажатии на бургер-иконку или на свободное от бургер-меню пространство адаптивное меню плавно скрывается уезжая за правую часть экрана, бургер-иконка плавно поворачивается на 90 градусов обратно: +4')
console.log('[x]    бургер-иконка создана при помощи html+css, без использования изображений: +2')
console.log('[x]    ссылки в адаптивном меню работают, обеспечивая плавную прокрутку по якорям, сохраняются заданные на первом этапе выполнения задания требования интерактивности элементов меню: +2')
console.log('[x]    при клике по ссылке в адаптивном меню адаптивное меню плавно скрывается вправо, бургер-иконка поворачивается на 90 градусов обратно: +2')
console.log('[x]    бургер-меню соответствует макету (центрирование по вертикали и горизонтали элементов меню, расположение иконки). При этом на странице Pets цветовая схема может быть как темная, так и светлая: +2')
console.log('[x]    область, свободная от бургер-меню, затемняется: +2')
console.log('[x]    страница под бургер-меню не прокручивается: +4')
console.log('2. Реализация слайдера-карусели на странице Main: +36')
console.log('[x]    при нажатии на стрелки происходит переход к новому блоку элементов: +4')
console.log('[x]    смена блоков происходит с соответствующей анимацией карусели (способ выполнения анимации не проверяется): +4')
console.log('[x]    слайдер бесконечен, т.е. можно бесконечно много нажимать влево или вправо, и каждый раз будет прокрутка в эту сторону с новым набором карточек: +4')
console.log('[x]    при переключении влево или вправо прокручивается ровно столько карточек, сколько показывается при текущей ширине экрана (3 для 1280px, 2 для 768px, 1 для 320px): +4')
console.log('[x]    каждый новый слайд содержит псевдослучайный набор карточек животных, т.е. формируется из исходных объектов в случайном порядке со следующими условиями:')
console.log('[x]    в текущем блоке слайда карточки с питомцами не повторяются: +4')
console.log('[x]    в следующем блоке нет дублирования карточек с текущим блоком. Например в слайдере из 3 элементов, следующий выезжающий слайд будет содержать 3 (из 8 доступных) новых карточки питомца, таких, каких не было среди 3х карточек на предыдущем уехавшем слайде: +4')
console.log('[x]    сохраняется только одно предыдущее состояние. Т.е. при последовательном переходе два раза влево, а потом два раза вправо, мы получим набор карточек, отличный от исходного: +4')
console.log('[x]    при каждой перезагрузке страницы формируется новая последовательность карточек: +2')
console.log('[x]    генерация наборов карточек происходит на основе 8 объектов с данными о животными: +2')
console.log('[x]    при изменении ширины экрана (от 1280px до 320px и обратно), слайдер перестраивается и работает без перезагрузки страницы (набор карточек при этом может как изменяться, так и оставаться тем же, скрывая лишнюю или добавляя недостающую, и сохраняя при этом описанные для слайдера требования): +4')
console.log('3. Реализация пагинации на странице Pets: +36')
console.log('[x]    при перезагрузке страницы всегда открывается первая страница пагинации: +2')
console.log('[x]    при нажатии кнопок > или < открывается следующая или предыдущая страница пагинации соответственно: +2')
console.log('[x]    при нажатии кнопок >> или << открывается последняя или первая страница пагинации соответственно: +2')
console.log('[x]    при открытии первой страницы кнопки << и < неактивны: +2')
console.log('[x]    при открытии последней страницы кнопки > и >> неактивны: +2')
console.log('[x]    в кружке по центру указан номер текущей страницы. При переключении страниц номер меняется на актуальный: +2')
console.log('[x]    каждая страница пагинации содержит псевдослучайный набор питомцев, т.е. формируется из исходных объектов в случайном порядке со следующими условиями:')
console.log('[x]    при загрузке страницы формируется массив из 48 объектов питомцев. Каждый из 8 питомцев должен встречаться ровно 6 раз: +4')
console.log('[x]    при каждой перезагрузке страницы формируется новый массив со случайной последовательностью: +4')
console.log('[x]    карточки питомцев не должны повторяться на одной странице: +4')
console.log('[x]    при переключении страницы данные меняются (для >1280px меняется порядок карточек, для остальных - меняется набор и порядок карточек): +4')
console.log('[x]    при неизменных размерах области пагинации, в том числе размерах окна браузера, и без перезагрузки страницы, возвращаясь на страницу под определенным номером, контент на ней всегда будет одинаков. Т.е. карточки питомцев будут в том же расположении, что и были до перехода на другие страницы: +2')
console.log('[x]    общее количество страниц при ширине экрана 1280px - 6, при 768px - 8, при 320px - 16 страниц: +2')
console.log('[x]    при изменении ширины экрана (от 1280px до 320px и обратно), пагинация перестраивается и работает без перезагрузки страницы (страница может оставаться той же или переключаться, при этом сформированный массив - общая последовательность карточек - не обновляется, сохраняются все остальные требования к пагинации): +4')
console.log('4. Реализация попап на обеих страницах: +12')
console.log('[x]    попап появляется при нажатии на любое место карточки с описанием конкретного животного: +2')
console.log('[x]    часть страницы вне попапа затемняется: +2')
console.log('[x]    при открытии попапа вертикальный скролл страницы становится неактивным, при закрытии - снова активным: +2')
console.log('[x]    при нажатии на область вокруг попапа или на кнопку с крестиком попап закрывается, при этом при нажатии на сам попап ничего не происходит: +2')
console.log('[x]    кнопка с крестиком интерактивная: +2')
console.log('[x]    окно попапа (не считая кнопку с крестиком) центрировано по всем осям, размеры элементов попапа и их расположение совпадают с макетом: +2')